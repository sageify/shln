kc kubectl

#
# Set behavior of native commands
#

# prevent native global option values from being treated as commands
# without these settings:  kc -n c c > kc -n create c
# with settings: kc -n c c > kc -n c create
kubectl:-n           !1
kubectl:--namespace  !1
kubectl:-s           !1
kubectl:--server     !1
kubectl:-v           !1
kubectl:--v          !1

# native command, no further subcommand
kubectl>config>set-credentials   !c

# native command, no further subcommand, but next argument is available for expansion
# handles   kc get p -> kc get po  but keeps command and kubectl>get
kubectl>create    !k
kubectl>describe  !k
kubectl>get       !k

# treated as global even though they are not.
# this is an invalid command:  kc -all gp > kc --all-namespaces get po  
# this is:  kc gp -all > kc get po --all-namespaces  
kubectl:-f           !1
kubectl:--filename   !1
kubectl:--all        --all-namespaces
kubectl:--fs         +--field-selector=
kubectl:--nks        -n=kube-system
kubectl:--ow         -o=wide
kubectl:--ojp        +-o=jsonpath=
kubectl:--sl         --show-labels

#
# Expansions
#

kubectl>a   apply
kubectl>af  apply -f
kubectl>c   create
kubectl>cd  create d
kubectl>co  config
kubectl>d   describe
kubectl>e   explain
kubectl>ep  explain po
kubectl>g   get
kubectl>gd  get d
kubectl>gp  get p
kubectl>gs  get s
kubectl>l   logs
kubectl>r   replace
kubectl>rm  delete
kubectl>ru  run

# macros
kubectl>debug  run debug --rm -i -t --image=busybox --restart=Never
kubectl>scns   config set-context --current --namespace
kubectl>gcns   config v --minify --output jsonpath={..namespace}

kubectl>config>g    get-contexts
kubectl>config>c    current-context
kubectl>config>u    use-context
kubectl>config>s    set-context
kubectl>config>v    view
kubectl>config>scr  set-credentials

kubectl>config>set-credentials>-p  +--password=
kubectl>config>set-credentials>-u  +--username=
kubectl>config>view>

kubectl>create>c  configmap
kubectl>create>d  deploy
kubectl>create>p  po
kubectl>create>s  svc

kubectl>describe>p  po

kubectl>explain>c  configmap
kubectl>explain>d  deploy
kubectl>explain>p  po
kubectl>explain>s  svc

kubectl>get>-s  --sort-by=.metadata.name
kubectl>get>-y  -o=yaml
kubectl>get>c   configmap
kubectl>get>d   deploy
kubectl>get>p   po
kubectl>get>s   svc


pf printf
printf                !c
printf>
printf:--all          all
printf>--dang         edge case
printf>--dangcase     +edge case=
printf>--dangword     +`edge case=
printf>--ignore-next  !1
printf>--ignore-rest  !*
printf>--lines        -s -w
printf>--spaces       `   
printf>--warning      "Hello World"
printf>-b            `[%s]
printf>-s             Hello World
printf>-t             `Hello `World
printf>-w             `Hello World
